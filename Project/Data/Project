{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pandas import DataFrame\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import statsmodels.formula.api as smf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Education = pd.read_excel(\"/Users/emmanuelohiomoba/Desktop/ce599/Project/Data/Education_E.xlsx\")\n",
    "Education = Education.replace({'−': 0})\n",
    "Education.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Assigning scores\n",
    "def score(x):\n",
    "    if 0<x<= 5:\n",
    "        return 5\n",
    "    elif 5<x<=10:\n",
    "        return 4\n",
    "    elif 10<x<=20:\n",
    "        return 3\n",
    "    elif 20<x<=40:\n",
    "        return 2\n",
    "    elif x>40:\n",
    "        return 1\n",
    "    else:\n",
    "        return \n",
    "\n",
    "def scores(x):\n",
    "    if x >= 85:\n",
    "        return 5\n",
    "    elif 70<x<=85:\n",
    "        return 4\n",
    "    elif 55<x<=70:\n",
    "        return 3\n",
    "    elif 40<x<=55:\n",
    "        return 2\n",
    "    elif 0<x<=40:\n",
    "        return 1\n",
    "    else: \n",
    "        return \n",
    "def s_score(x):\n",
    "    \n",
    "    if 0<x<= 0.5:\n",
    "        return 5\n",
    "    elif 0.5<x<=1.5:\n",
    "        return 4\n",
    "    elif 1.5<x<=3:\n",
    "        return 3\n",
    "    elif 3<x<=10:\n",
    "        return 2\n",
    "    elif x>10:\n",
    "        return 1\n",
    "    else:\n",
    "        return \n",
    "    \n",
    "    \n",
    "Education['PMS'] = Education['%Pry_M_Out'].apply(score)\n",
    "Education['PFS'] = Education['%Pry_F_Out'].apply(score)\n",
    "Education['SMS'] = Education['%Sec_MOut'].apply(score)\n",
    "Education['SFS'] = Education['%Sec_FOut'].apply(score)\n",
    "Education['Pry_CR_MS'] = Education['Pry_CR_M'].apply(scores)\n",
    "Education['Pry_CR_FS'] = Education['Pry_CR_F'].apply(scores)\n",
    "Education['Sec_CR_MS'] = Education['Sec_CR_M'].apply(scores)\n",
    "Education['Sec_CR_FS'] = Education['Sec_CR_F'].apply(scores)\n",
    "Education['S_Prof_MS'] = Education['S_Prof_M'].apply(scores)\n",
    "Education['S_Prof_FS'] = Education['S_Prof_F'].apply(scores)\n",
    "education = Education\n",
    "education"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "education['CR_score']= education[['Pry_CR_MS','Pry_CR_FS','Sec_CR_MS','Sec_CR_FS']].mean(axis=1)\n",
    "education['Prf_score']=education[['S_Prof_MS','S_Prof_FS']].mean(axis=1)\n",
    "education['sch_score']= education[['SMS', 'PMS','SFS','PFS']].mean(axis=1)\n",
    "education['EDU'] = (education[['sch_score','CR_score','Prf_score']].mean(axis=1))/5\n",
    "education"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "Health = pd.read_excel(\"/Users/emmanuelohiomoba/Desktop/ce599/Project/Data/Health_E.xlsx\")\n",
    "Health = Health.replace({'–': 0})\n",
    "Health.head()\n",
    "Health['DTP3_s']= Health['DTP3'].apply(scores)\n",
    "Health['Polio3_s']= Health['Polio3'].apply(scores)\n",
    "Health['MCV2_s']= Health['MCV2'].apply(scores)\n",
    "Health['HEP_s']= Health['HEP'].apply(scores)\n",
    "Health['HB3_s']= Health['HB3'].apply(scores)\n",
    "Health['E_BRF_s']= Health['E_BRF'].apply(scores)\n",
    "Health['CMR_s']= Health['CMR'].apply(score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "health=Health"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "health['vac_score']=health[['DTP3_s','Polio3_s','MCV2_s','HEP_s','HB3_s']].mean(axis=1)\n",
    "health['HEA'] = (health[['vac_score','E_BRF_s','CMR_s']].mean(axis=1))/5\n",
    "health"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Society= pd.read_excel(\"/Users/emmanuelohiomoba/Desktop/ce599/Project/Data/SOCIETY.xlsx\")\n",
    "Society['SWR_s']= Society['SWR'].apply(scores)\n",
    "Society['SIS_s']= Society['SIS'].apply(scores)\n",
    "Society['CR_s']= Society['CR'].apply(score)\n",
    "Society['DRR_s']= Society['DRR'].apply(s_score)\n",
    "society=Society\n",
    "society.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "society['SOC'] = (society[['SWR_s', 'SIS_s','CR_s','DRR_s']].mean(axis=1))/5\n",
    "society.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data= [education['Countries'],education['EDU'],health['HEA'],society['SOC']]\n",
    "headers=['Country', 'EDU', 'HEA', 'SOC']\n",
    "Index_Table=df3 = pd.concat(data, axis=1, keys=headers)\n",
    "Index_Table['CDI']= np.cbrt(Index_Table['HEA']*Index_Table['SOC']*Index_Table['EDU'])\n",
    "Index_Table.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Index_Table.nlargest(10, 'CDI', keep='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Index_Table.to_csv('Index.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Index_Table['EDU'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Index_Table['HEA'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Index_Table['CDI'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "len(Index_Table[Index_Table['HEA']>0.9])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#From the results above, it appears that most nations are doing better in Health than other areas. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Leaving out Islands and smaller countries\n",
    "\n",
    "#Top 5 nations in EDU: Belarus, Finland, Ireland, Japan\n",
    "#Lowest ranked nations in  EDU: Eq. Guinea, Eritrea, Guinea-Bissau,South Sudan, ..., Chile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Top 5 nations in HEA: Australia, Belgium, Croatia, Cyprus, Denmark\n",
    "#Lowest ranked nations in  HEA:Eq Guinea, Central Africa Republic, Chad, Guinea, Somalia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Top 5 nations in SOC: Argentina, Belarus, Costa Rica, North Macedonia, Lucia\n",
    "#Lowest ranked nations in  SOC: Paragua, Israel,Sudan, Afghanistan,Belize, Chile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Top rank nations in CDI: Spain, South Korea, San Marino, United Kingdom, Japan, Australia, New Zealand, Sweden,\n",
    "#Lowest rank nations in CDI:Eq.Guinea, Chad, South Sudan, Angola,Afghanistan."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Index = pd.read_csv(\"/Users/emmanuelohiomoba/Desktop/ce599/Project/Data/Index.csv\")\n",
    "Index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
